{"version":3,"sources":["app.js","focusMe.directive.js","myPagination.directive.js","reservationGrid.js","authentication.service.js","authenticationInterceptor.service.js","authenticationSettings.constant.js","currentUser.service.js","datetime.service.js","httpRequest.service.js","lookup.service.js","helperMethods.service.js","startup.js","warningModal.controller.js","state.js","appLayout.controller.js","dashboard.controller.js","index.controller.js","login.controller.js","login.service.js","simpleLogin.controller.js","checkin.controller.js","checkin.service.js","root.controller.js","report.controller.js","report.service.js"],"names":["angular","module","focusMe","$timeout","scope","focus","link","element","$watch","value","directive","$inject","myPagination","FlightBoardService","myController","pageChanged","vm","currentPage","console","log","ampersand","size","counter","SetPaginationCounter","itemsPerPage","begin","end","activate","this","PageChanged","restrict","controller","controllerAs","bindToController","templateUrl","reservationGrid","reservations","AuthenticationService","LoginService","localStorageService","loginUser","userObject","loginPromise","PostLogin","then","data","setAuthenticationData","accessToken","token","user","accessTokenExpires","expires","getLocalDataStorage","key","get","logOut","i","self","dataInStorage","clearAuthenticationData","set","remove","service","LoginUser","GetLocalDataStorage","LogOut","factory","AuthenticationInterceptorService","$q","$injector","$window","_request","config","headers","authenticationData","request","constant","AuthenticationAPI","ResourcesAPI","CurrentUserService","setConfiguration","obj","ConfigKey","getConfiguration","getCurrentUserData","GetConfiguration","SetConfiguration","GetCurrentUserData","DateTimeService","addHoursToTodaysDateTime","numberOfHours","moment","add","hourSymbol","format","dateTimeFormat","getTimeFromDateTime","datetime","momentDate","timeFormat","formatDate","date","dateFormat","formatDateTime","formatTime","setHoursToDate","hours","arithmetic","subtract","getTodaysDate","getTodaysTime","getDateFormats","dateFormats","getDateOptions","dateOptions","getAltInputFormats","altInputFormats","getDateParts","d","dateParts","year","day","month","getDifference","start","measurement","startDate","endDate","diff","formatDateYear","formatMomentDateYear","formatYear","startingDay","showWeeks","AddHoursToTodaysDateTime","SetHoursToDate","FormatDate","FormatDateTime","FormatTime","FormatDateYear","FormatMomentDateYear","GetTimeFromDateTime","GetTodaysDate","GetTodaysTime","GetDateFormats","GetDateOptions","GetAltInputFormats","GetDateParts","GetDifference","HttpRequestService","$http","Go","httpConfiguration","deferred","defer","success","status","resolve","error","reject","promise","LookupService","AuthenticationSettings","formatBases","callback","method","url","push","BaseId","Iata","err","basePromise","undefined","FormatBases","HelperMethodsService","isObjectNull","length","isPropertyEmpty","trim","IsObjectNull","IsPropertyEmpty","authenticationInterceptor","$httpProvider","interceptors","runBlock","$rootScope","$state","$on","event","toState","toParams","fromState","fromParams","userAuthentication","loginRoute","simpleLogin","root","name","preventDefault","go","run","message","WarningModalController","$scope","$uibModalInstance","ok","dismiss","mainState","$stateProvider","$urlRouterProvider","state","views","rootLayout","AppLayoutController","$location","userName","username","setUp","path","open","isSideNavClosed","args","close","navigateTo","route","is","title","Logout","Open","NavigateTo","DashboardController","IndexController","httpRequestPromise","httpPromise","LoginController","loginForm","$invalid","displayError","grant_type","userCredentails","password","$emit","errorMessage","postLogin","email","Content-type","SimpleLoginController","clickedCircle","id","saveNumber","colorSmallCircle","checkPasscodeLength","numbers","text","passcode","smallCircles","res","deletePasscode","index","splice","ClickedCircle","DeletePasscode","CheckInController","CheckInService","setDefault","questionPromise","GetQuestions","questions","rows","question1","question2","question3","next2","question1Response","showQuestion1","response","questionid_fk","questionid","type","getCheckinType","visitid_fk","getVisitId","postQuestionPromise","PostQuestion","showQuestion2","setVisitId","visitid","next3","question2Response","isNaN","showQuestion3","next4","question3Response","showQuestion4","displayMessage","VisitId","question4Response","Next2","Next3","Next4","getQuestions","postQuestion","RootController","ReportController","ReportService","SubmitFilterForm","FilterForm","startTime","FilterObject","hour","minute","startDateTime","endTime","fetchMe","setInitialObjects","Total","Count","Users","Pool","Percent","Gym","GymPool","setDatePickerAndTime","getInitialTimes","timeZoneOffset","totalUsage","getFacilityUsage","setEven","setEven2","poolUsage","gymUsage","users","r","percent","Math","round","percent2","percent3","parseUsers","object","array","j","visit","displayObject","houseNumber","facility","createdonlocaltime","parseZone","resolvePromises","promises","all"],"mappings":"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","file":"../allminified.min.js","sourcesContent":["(function () {\r\n    'use strict';\n\n    angular.module('app', [\n        // Angular modules\n        'ngAnimate',\n        'angular-loading-bar',\n\n        // Custom modules\n\n        // 3rd Party Modules\n         'ui.bootstrap',\n         'ui.router',\n         'LocalStorageModule',\n         'cgBusy'\n    ]);\r\n})();\n","(function () {\r\n    angular\r\n        .module('app')\r\n        .directive('focusMe', focusMe);\r\n\r\n    focusMe.$inject = ['$timeout'];\r\n\r\n    function focusMe($timeout) {\r\n        return {\r\n            scope: { focus: '=focusMe' },\r\n            link: function (scope, element) {\r\n                scope.$watch('focus', function (value) {\r\n                    if (value === true) {\r\n                        $timeout(function () {\r\n                            element[0].focus();\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }\r\n})();","/*Still Implementing not ready for production*/\r\n(function () {\r\n    angular\r\n        .module('app')\r\n        .directive(\"myPagination\", myPagination);\r\n\r\n    myPagination.$inject = [\"FlightBoardService\"];\r\n\r\n\r\n    function myPagination(FlightBoardService) {\r\n        return {\r\n            restrict: 'EA', // E = element, A= Attribute\r\n            scope: { itemsPerPage: \"=\", size: \"=\", currentPage: \"=\", ampersand: \"&\" },\r\n            controller: myController,\r\n            controllerAs: 'vm',\r\n            bindToController: true,\r\n            templateUrl: 'app/core/templates/myPagination.html',\r\n        };\r\n\r\n\r\n        function myController() {\r\n            var vm = this;\r\n            vm.PageChanged = pageChanged;\r\n\r\n            function pageChanged() {\r\n                //TODO: Needs to call data source here, then update the counter. \r\n\r\n\r\n                if (vm.currentPage > 1) {\r\n                    console.log(\"enter here first\");\r\n                    vm.ampersand({ currentPage: vm.currentPage });\r\n                }\r\n                console.log(vm.currentPage);\r\n                console.log(vm.size);\r\n                console.log(\"directive continues down the code\");\r\n                var counter = FlightBoardService.SetPaginationCounter(vm.itemsPerPage, vm.size, vm.currentPage);\r\n                vm.begin = counter.begin;\r\n                vm.end = counter.end;\r\n\r\n            }\r\n\r\n            activate();\r\n            function activate() {\r\n                //Intialize the counter values\r\n                pageChanged();\r\n            }\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n/*Usage:\r\n        <my-pagination items-per-page=\"vm.itemsPerPage\" size=\"vm.departureData.length\" current-page=\"vm.currentPage\" ampersand=\"vm.FetchDepartureData(currentPage)\"></my-pagination>\r\n        <div class=\"col-sm-12\" style=\"padding-top: 0px\">\r\n            <uib-pagination class=\"pull-right\" total-items=\"vm.totalItems\" ng-model=\"vm.currentPage\" ng-change=\"vm.PageChanged()\"></uib-pagination>\r\n        </div>\r\n\r\n Parent Controller: \r\n    function fetchDepartureData(currentPage) {\r\n    vm.departureData = [{ prop: 1 }, { prop: 1 }, { prop: 1 }];\r\n}\r\n\r\n*/","(function () {\r\n    angular\r\n        .module('app')\r\n        .directive(\"reservationGrid\", reservationGrid);\r\n\r\n    reservationGrid.$inject = [];\r\n\r\n\r\n    function reservationGrid() {\r\n        return {\r\n            restrict: 'EA', // E = element, A= Attribute\r\n            scope: { reservations: \"=\" },\r\n            bindToController: true,\r\n            templateUrl: 'app/core/templates/reservation.html',\r\n            controller: myController,\r\n            controllerAs: 'vm',\r\n        };\r\n\r\n        function myController() { }\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('AuthenticationService', AuthenticationService);\r\n\r\n    AuthenticationService.$inject = ['LoginService', 'localStorageService'];\r\n\r\n    function AuthenticationService(LoginService, localStorageService) {\r\n        var self = this;\r\n        self.dataInStorage = ['authenticationData', 'Configuration'];\r\n\r\n        var service = {\r\n            LoginUser: loginUser,\r\n            GetLocalDataStorage: getLocalDataStorage,\r\n            LogOut: logOut\r\n        };\r\n\r\n        return service;\r\n\r\n        function loginUser(userObject) {\r\n            var loginPromise = LoginService.PostLogin(userObject);\r\n            loginPromise.then(function (data) {\r\n                setAuthenticationData('authenticationData', {\r\n                    accessToken: data.token,\r\n                    user: data.user,\r\n                    accessTokenExpires: data.expires\r\n                });\r\n            });\r\n\r\n            return loginPromise;\r\n        }\r\n\r\n        function getLocalDataStorage(key) {\r\n            return localStorageService.get(key);\r\n        }\r\n\r\n        function logOut(key) {\r\n            for (var i in self.dataInStorage) {\r\n                clearAuthenticationData(self.dataInStorage[i]);\r\n            }\r\n        }\r\n\r\n\r\n        function setAuthenticationData(key, value) {\r\n            localStorageService.set(key, value);\r\n        }\r\n\r\n        function clearAuthenticationData(key) {\r\n            return localStorageService.remove(key);\r\n        }\r\n\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('AuthenticationInterceptorService', AuthenticationInterceptorService);\r\n\r\n    AuthenticationInterceptorService.$inject = ['$q', '$injector', '$window', '$timeout', 'localStorageService'];\r\n\r\n    function AuthenticationInterceptorService($q, $injector, $window, $timeout, localStorageService) {\r\n        return {\r\n            request: _request\r\n        };\r\n\r\n        function _request(config) {\r\n            config.headers = config.headers || {};\r\n\r\n            var authenticationData = localStorageService.get('authenticationData');\r\n        \r\n            if (authenticationData) {\r\n                config.headers[\"x-access-token\"] = authenticationData.accessToken;\r\n            }\r\n\r\n            return config;\r\n        }\r\n    }\r\n})();","(function () {\r\n    angular\r\n        .module('app')\r\n        .constant(\"AuthenticationSettings\", {\r\n            AuthenticationAPI: 'https://resourceserver.herokuapp.com/login',\r\n            ResourcesAPI: 'https://resourceserver.herokuapp.com/'\r\n        });\r\n})();","(function () {\r\n    angular\r\n        .module('app')\r\n        .factory('CurrentUserService', CurrentUserService);\r\n\r\n    CurrentUserService.$inject = ['localStorageService', 'AuthenticationService'];\r\n\r\n    function CurrentUserService(localStorageService, AuthenticationService) {\r\n        var self = this;\r\n        self.ConfigKey = 'Configuration';\r\n\r\n        return {\r\n            GetConfiguration: getConfiguration,\r\n            SetConfiguration: setConfiguration,\r\n            GetCurrentUserData: getCurrentUserData\r\n\r\n        };\r\n\r\n        function setConfiguration(obj) {\r\n            localStorageService.set(self.ConfigKey, obj);\r\n        }\r\n\r\n        function getConfiguration() {\r\n            return localStorageService.get(self.ConfigKey);\r\n        }\r\n\r\n        function getCurrentUserData() {\r\n            return AuthenticationService.GetLocalDataStorage(\"authenticationData\");\r\n        }\r\n    }\r\n})();","(function () {\r\n    angular\r\n        .module('app')\r\n        .factory(\"DateTimeService\", DateTimeService);\r\n\r\n    DateTimeService.$inject = [];\r\n\r\n    function DateTimeService() {\r\n        var self = this;\r\n        self.date = new moment();\r\n        self.dateFormat = \"M/DD/YYYY\";\r\n        self.dateTimeFormat = \"M/DD/YYYY HH:mm\";\r\n        self.timeFormat = \"HH:mm\";\r\n        self.hourSymbol = \"h\";\r\n        self.dateFormats = ['dd-MMMM-yyyy', 'YYYY-MM-DD', 'dd.MM.yyyy', 'MM/dd/yyyy', 'shortDate'];\r\n        self.dateOptions = { formatYear: 'yy', startingDay: 1, showWeeks: true };\r\n        self.altInputFormats = ['M!/d!/yyyy'];\r\n\r\n        var service = {\r\n            AddHoursToTodaysDateTime: addHoursToTodaysDateTime,\r\n            SetHoursToDate: setHoursToDate,\r\n            FormatDate: formatDate,\r\n            FormatDateTime: formatDateTime,\r\n            FormatTime: formatTime,\r\n            FormatDateYear: formatDateYear,\r\n            FormatMomentDateYear: formatMomentDateYear,\r\n            GetTimeFromDateTime: getTimeFromDateTime,\r\n            GetTodaysDate: getTodaysDate,\r\n            GetTodaysTime: getTodaysTime,\r\n            GetDateFormats: getDateFormats,\r\n            GetDateOptions: getDateOptions,\r\n            GetAltInputFormats: getAltInputFormats,\r\n            GetDateParts: getDateParts,\r\n            GetDifference: getDifference\r\n        };\r\n\r\n        return service;\r\n\r\n        function addHoursToTodaysDateTime(numberOfHours) {\r\n            return moment().add(numberOfHours, self.hourSymbol).format(self.dateTimeFormat);\r\n        }\r\n\r\n        function addHoursToDateTime(numberOfHours, datetime) {\r\n            return datetime.add(numberOfHours, self.hourSymbol).format(self.dateTimeFormat);\r\n        }\r\n\r\n        function getTimeFromDateTime(datetime) {\r\n            var momentDate = moment(datetime);\r\n            return momentDate.format(self.timeFormat);\r\n        }\r\n\r\n        function formatDate(date) {\r\n            return moment(date).format(self.dateFormat);\r\n        }\r\n\r\n        function formatDateTime(datetime) {\r\n            return moment(datetime).format(self.dateTimeFormat);\r\n        }\r\n\r\n        function formatTime(date) {\r\n            return moment(date).format(self.timeFormat);\r\n        }\r\n\r\n        function setHoursToDate(date, hours, arithmetic) {\r\n            switch (arithmetic) {\r\n                case 'a':\r\n                    return moment(date, self.dateFormat).add(hours, self.hourSymbol).format(self.dateFormat);\r\n                case 's':\r\n                    return moment(date, self.dateFormat).subtract(hours, self.hourSymbol).format(self.dateFormat);\r\n            }\r\n        }\r\n\r\n        function getTodaysDate() {\r\n            return moment().format(self.dateFormat);\r\n        }\r\n\r\n        function getTodaysTime() {\r\n            return moment().format(self.timeFormat);\r\n        }\r\n\r\n        function getTodaysDateTime() {\r\n            return moment().format(self.dateTimeFormat);\r\n        }\r\n\r\n        function getDateFormats() {\r\n            return self.dateFormats;\r\n        }\r\n\r\n        function getDateOptions() {\r\n            return self.dateOptions;\r\n        }\r\n\r\n        function getAltInputFormats() {\r\n            return self.altInputFormats;\r\n        }\r\n\r\n        function getDateParts(date) {\r\n            var d = moment(date, self.dateFormat);\r\n            var dateParts = { year: d.year(), day: d.date(), month: d.month() };\r\n            return dateParts;\r\n        }\r\n\r\n        function getDifference(start, end, measurement) {\r\n            var startDate = moment(start);\r\n            var endDate = moment(end);\r\n            return endDate.diff(startDate, measurement);\r\n        }\r\n\r\n        function formatDateYear(date) {\r\n            return moment(date).format(self.dateFormats[1]); \r\n        }\r\n\r\n        function formatMomentDateYear() {\r\n            return moment().format(self.dateFormats[1]); \r\n        }\r\n\r\n\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('HttpRequestService', HttpRequestService);\r\n\r\n    HttpRequestService.$inject = ['$q', '$http'];\r\n\r\n    function HttpRequestService($q, $http) {\r\n        return {\r\n            Go: Go\r\n        };\r\n\r\n        function Go(httpConfiguration) {\r\n            var deferred = $q.defer();\r\n            $http(httpConfiguration).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (data, status, headers, config) {\r\n                deferred.reject(data);\r\n            });\r\n            return deferred.promise;\r\n        }\r\n    }\r\n\r\n})();","(function () {\r\n    angular\r\n        .module('app')\r\n        .factory('LookupService', LookupService);\r\n\r\n    LookupService.$inject = ['HttpRequestService', 'AuthenticationSettings'];\r\n\r\n    function LookupService(HttpRequestService, AuthenticationSettings) {\r\n        var self = this;\r\n        self.basePromise = undefined;\r\n\r\n        return {\r\n            FormatBases: formatBases\r\n        };\r\n\r\n        /*API Services*/\r\n\r\n        function formatBases(callback) {\r\n            HttpRequestService.Go({\r\n                method: 'GET',\r\n                url: AuthenticationSettings.ResourcesAPI + \"api/Lookup/\" + \"GetCpaBases\"\r\n            }).then(function (data) {\r\n                var format = [];\r\n                for (var i in data) {\r\n                    format.push({ BaseId: data[i].BaseId, Iata: data[i].Iata });\r\n                }\r\n                callback(null, format);\r\n            }).catch(function (err) {\r\n                callback(err, null);\r\n            }); \r\n        }\r\n    }\r\n\r\n})();\r\n","(function () {\r\n    angular\r\n        .module('app')\r\n        .factory('HelperMethodsService', HelperMethodsService);\r\n\r\n    HelperMethodsService.$inject = [];\r\n\r\n    function HelperMethodsService() {\r\n\r\n        return {\r\n            IsObjectNull: isObjectNull,\r\n            IsPropertyEmpty: isPropertyEmpty\r\n        };\r\n\r\n        function isObjectNull(obj) {\r\n            return (obj === null || obj === undefined || obj.length === 0);\r\n        }\r\n\r\n        function isPropertyEmpty(value) {\r\n            return ((value === null || value === undefined) || (value.trim().length === 0));\r\n        }\r\n    }\r\n\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .config(authenticationInterceptor); \r\n        \r\n    authenticationInterceptor.$inject = ['$httpProvider'];\r\n\r\n    function authenticationInterceptor($httpProvider) {\r\n        $httpProvider.interceptors.push('AuthenticationInterceptorService');\r\n    }\r\n})(); \r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .run(runBlock);\r\n\r\n    runBlock.$inject = ['$rootScope', '$state', '$timeout', 'AuthenticationService'];\r\n\r\n    function runBlock($rootScope, $state, $timeout, AuthenticationService) {\r\n        $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {\r\n\r\n            var userAuthentication = AuthenticationService.GetLocalDataStorage(\"authenticationData\");\r\n            var loginRoute = 'root.login';\r\n            var simpleLogin = 'root.simpleLogin';\r\n            var root = \"root\";\r\n\r\n            //if user is not authenticated, and is routing to the login page then there is no need to route user. \r\n            if (!userAuthentication && (toState.name == loginRoute)) {\r\n                return;\r\n            }\r\n\r\n            //if user is authenticated then he should not be able to visit login page\r\n            if (userAuthentication && (toState.name == loginRoute)) {\r\n                event.preventDefault();\r\n                $timeout(function () {\r\n                    $state.go('root.appLayout.dashboard');\r\n                });\r\n            }\r\n\r\n            //If user is not authenticated, return user to the login view. \r\n            if (!userAuthentication && simpleLogin !== toState.name) {\r\n                event.preventDefault();\r\n                $timeout(function () {\r\n                    $state.go('root.login');\r\n                });\r\n            }\r\n\r\n            //if user is authenticated and starting the app. \r\n            if (userAuthentication && toState.name == root) {\r\n                $timeout(function () {\r\n                    $state.go('root.appLayout.dashboard');\r\n                });\r\n            }\r\n\r\n          /*  if (userAuthentication && toState.name == 'root.appLayout.board') {\r\n                event.preventDefault();\r\n                $timeout(function () {\r\n                    if (fromState.name !== 'root.appLayout.flightBoard') {\r\n                        $state.go('root.appLayout.dashboard');\r\n                    }\r\n                });\r\n            } */\r\n        });\r\n    }\r\n})();\r\n\r\n\r\n/*Configuring angular-busy*/\r\nangular.module('app').value('cgBusyDefaults', {\r\n    message: '',\r\n    templateUrl: 'app/core/templates/customSplashScreen.html'\r\n});","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('WarningModalController', WarningModalController);\r\n\r\n    WarningModalController.$inject = ['$scope', '$uibModalInstance'];\r\n\r\n    function WarningModalController($scope, $uibModalInstance) {\r\n        /* jshint validthis:true */\r\n\r\n        $scope.ok = function () {\r\n            $uibModalInstance.dismiss('');\r\n        };\r\n    }\r\n})();\r\n","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .config(mainState);\n\n    mainState.$inject = ['$stateProvider', '$urlRouterProvider'];\n\n    function mainState($stateProvider, $urlRouterProvider) {\n\n        $stateProvider.state('root', {\n            url: '',\n            views: {\n                'rootLayout': {\n                    templateUrl: 'app/main/rootLayout/rootLayout.html'\n                }\n            }\n        })\n        .state('root.login', {\n            url: '/login',\n            templateUrl: 'app/main/login/login.html',\n            controller: 'LoginController',\n            controllerAs: 'vm'\n        })\n        .state('root.simpleLogin', {\n            url: '/simplelogin',\n            templateUrl: 'app/main/simpleLogin/simpleLogin.html',\n            controller: 'SimpleLoginController',\n            controllerAs: \"vm\"\n        })\n        .state('root.appLayout', {\n            url: '/app',\n            templateUrl: 'app/main/application/appLayout.html',\n            controller: 'AppLayoutController',\n            controllerAs: 'vm'\n        })\n        .state('root.appLayout.dashboard', {\n            url: '/dashboard',\n            templateUrl: 'app/main/dashboard/dashboard.html',\n            controller: 'DashboardController',\n            controllerAs: 'vm'\n        })\n        .state('root.appLayout.admin', {\n            url: '/admin',\n            templateUrl: 'app/main/admin/admin.html',\n            controller: 'AdminController',\n            controllerAs: 'vm'\n        })\n        .state('root.appLayout.checkIn', {\n          url: '/checkIn',\n          templateUrl: 'app/main/checkIn/checkIn.html',\n          controller: 'CheckInController',\n          controllerAs: 'vm'\n        })\n\n            .state('root.appLayout.report',{\n                url: '/report',\n                templateUrl: 'app/main/report/report.html',\n                controller: 'ReportController',\n                controllerAs: 'vm'\n            });\n    }\n})();","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('AppLayoutController', AppLayoutController);\n\n    AppLayoutController.$inject = ['$scope', '$state', '$location', 'AuthenticationService', 'CurrentUserService'];\n\n    function AppLayoutController($scope, $state, $location, AuthenticationService, CurrentUserService) {\n        /* jshint validthis:true */\n        var vm = this;\n        vm.isSideNavClosed = false;\n        vm.state = $state;\n\n        vm.authenticationData = AuthenticationService.GetLocalDataStorage('authenticationData');\n        vm.title = 'AppLayout Controller';\n        vm.userName = undefined;\n\n        vm.Logout = logOut;\n        vm.Open = open;\n        vm.NavigateTo = navigateTo;\n        activate();\n\n        function activate() {\n            vm.userName = vm.authenticationData.user.username;\n            console.log(vm.userName);\n            console.log(\"hello\");\n            setUp();\n        }\n\n        function logOut() {\n            AuthenticationService.LogOut();\n            $location.path('/login');\n        }\n\n        function open() {\n            vm.isSideNavClosed = !vm.isSideNavClosed;\n        }\n\n        function setUp() {\n            $scope.$on('toggleSideNav', function (event, args) {\n                vm.isSideNavClosed = args.close;\n            });\n        }\n\n\n        function navigateTo(route) {\n            console.log(vm.state.is('root.appLayout.checkIn'));\n            if(!vm.state.is('root.appLayout.checkIn')) {\n                $state.go(route);\n            }\n        }\n\n    }\n})();\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('DashboardController', DashboardController);\r\n\r\n    DashboardController.$inject = ['$scope', '$state', 'LookupService', 'CurrentUserService', 'DateTimeService'];\r\n\r\n    function DashboardController($scope, $state, LookupService, CurrentUserService, DateTimeService) {\r\n        /* jshint validthis:true */\r\n        var vm = this;\r\n        vm.title = 'Dashboard Controller';\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n\r\n        function navigateTo(route) {\r\n            if (route) {\r\n                $state.go(route);\r\n            }\r\n        }\r\n\r\n        function baseSelected(item, model, label) {\r\n\r\n        }\r\n\r\n        function setUp() {\r\n            $scope.$on('loadSplashScreen', function (event, args) {\r\n                vm.httpRequestPromise = args.httpPromise;\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    angular\r\n\t\t.module('app')\r\n\t\t.controller(\"IndexController\", IndexController);\r\n\r\n    IndexController.$inject = ['$scope'];\r\n\r\n\r\n    function IndexController($scope) {\r\n        var vm = this;\r\n        vm.title = \"Index Controller\";\r\n        $scope.title = \"Index Controller\";\r\n\r\n        vm.httpRequestPromise = undefined;\r\n\r\n        $scope.$on('loadSplashScreen', function (event, args) {\r\n            vm.httpRequestPromise = args.httpPromise;\r\n        });\r\n\r\n        function activate() { }\r\n\r\n        activate();\r\n\r\n    }\r\n\r\n})();","(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('LoginController', LoginController);\n\n    LoginController.$inject = ['$scope', '$state', 'AuthenticationService'];\n\n    function LoginController($scope, $state, AuthenticationService) {\n        var vm = this;\n\n        vm.title = 'Login Controller';\n        vm.loginPromise = undefined;\n        vm.displayError = undefined;\n        vm.errorMessage = undefined;\n\n        vm.userCredentails = {};\n\n        vm.loginUser = loginUser;\n\n        function loginUser() {\n            if (vm.loginForm.$invalid) {\n                return;\n            }\n            vm.displayError = false;\n            var userObject = {\n                grant_type: \"password\",\n                username: vm.userCredentails.username,\n                password: vm.userCredentails.password\n            };\n\n            vm.loginPromise = AuthenticationService.LoginUser(userObject);\n\n            $scope.$emit('loadSplashScreen', { httpPromise: vm.loginPromise });\n\n            vm.loginPromise.then(function (data) {\n                $state.go('root.appLayout.dashboard');\n            }).catch(function (err) {\n                vm.displayError = true;\n                if ((err !== null) && err.error === \"ad_error\") {\n                    vm.errorMessage = \"You have entered the wrong username or password\";\n                }\n                else if (err === null || err === undefined) {\n                    vm.errorMessage = \"Login Connectivity has been lost\";\n                }\n                console.log(err);\n            });\n        }\n\n        activate();\n\n        function activate() { }\n    }\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('LoginService', LoginService);\r\n\r\n    LoginService.$inject = ['HttpRequestService', 'AuthenticationSettings'];\r\n\r\n    function LoginService(HttpRequestService, AuthenticationSettings) {\r\n        return {\r\n            PostLogin: postLogin\r\n        };\r\n\r\n        function postLogin(userObject) {\r\n            var user = {userObject: {email: userObject.username , password: userObject.password}};\r\n\r\n\r\n            return HttpRequestService.Go({\r\n                method: 'POST',\r\n                url: AuthenticationSettings.AuthenticationAPI,\r\n                data: user,\r\n                headers: { 'Content-type': 'application/json' } //\r\n            });\r\n        }\r\n    }\r\n})();","(function () {\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('SimpleLoginController', SimpleLoginController);\r\n\r\n    SimpleLoginController.$inject = ['$timeout', '$state'];\r\n\r\n    function SimpleLoginController($timeout, $state) {\r\n        var vm = this;\r\n        vm.passcode = []; \r\n        vm.numbers = [\r\n            { id: \"1\", text: \"one\" },\r\n            { id: \"2\", text: \"two\" },\r\n            { id: \"3\", text: \"three\" },\r\n            { id: \"4\", text: \"four\" },\r\n            { id: \"5\", text: \"five\" },\r\n            { id: \"6\", text: \"six\" },\r\n            { id: \"7\", text: \"seven\" },\r\n            { id: \"8\", text: \"eight\" },\r\n            { id: \"9\", text: \"nine\" },\r\n            { id: \"0\", text: \"zero\" },\r\n        ];\r\n        vm.smallCircles = [false, false,false, false, false, false];\r\n\r\n\r\n        vm.ClickedCircle = clickedCircle;\r\n        vm.DeletePasscode = deletePasscode;\r\n\r\n        function clickedCircle(id) {\r\n            vm[id] = true;\r\n            $timeout(function () {\r\n                vm[id] = false; \r\n            }, 200);\r\n          \r\n            saveNumber(id);           \r\n            colorSmallCircle();\r\n            checkPasscodeLength(); \r\n        }\r\n\r\n        function saveNumber(id) {          \r\n            for(var i in vm.numbers) {\r\n                if (vm.numbers[i].text === id) {\r\n                    vm.passcode.push(vm.numbers[i].id);                  \r\n                    break; \r\n                }\r\n            }\r\n        }\r\n\r\n        function colorSmallCircle() {\r\n            var length = vm.passcode.length - 1;\r\n            vm.smallCircles[length] = true;\r\n\r\n        }\r\n\r\n        function loginUser(callback) {\r\n            callback(\"Error\", null);\r\n        }\r\n\r\n        function checkPasscodeLength() {\r\n            if (vm.passcode.length == 6) {\r\n                loginUser(function (err, res) {\r\n                    if (err) {\r\n                        console.log(err);\r\n                        vm.passcode = [];\r\n                        $timeout(function () {\r\n                            for (var i in vm.smallCircles) {\r\n                                vm.smallCircles[i] = false;\r\n                            }\r\n                        }, 300);\r\n                    }\r\n                    \r\n                    if (res) {\r\n                        $state.go(\"root.login\");\r\n                    }\r\n                });           \r\n            }   \r\n        }\r\n\r\n        function deletePasscode() {\r\n            var index = vm.passcode.length - 1;\r\n            vm.smallCircles[index] = false;\r\n            vm.passcode.splice(index, 1); \r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n})(); ","/**\n * Created by Frankfernandez on 1/31/17.\n */\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('CheckInController', CheckInController);\n\n    CheckInController.$inject = ['$scope', '$state', 'CheckInService', 'CurrentUserService', 'DateTimeService', '$timeout'];\n\n    function CheckInController($scope, $state, CheckInService, CurrentUserService, DateTimeService, $timeout) {\n        /* jshint validthis:true */\n        var vm = this;\n        vm.title = 'CheckIn Controller';\n        vm.showQuestion1 = true;\n        vm.showQuestion2 = false;\n        vm.showQuestion3 = false;\n        vm.displayMessage = false;\n        vm.Next2 = next2;\n        vm.Next3 = next3;\n        vm.Next4 = next4;\n\n        activate();\n\n        function activate() {\n            setDefault();\n\n            var questionPromise = CheckInService.GetQuestions();\n            questionPromise.then(function(data) {\n                if(data && data.data) {\n                    var questions = data.data.rows;\n                    vm.question1 = questions[0];\n                    console.log(vm.question1);\n                    vm.question2 = questions[1];\n                    vm.question3 = questions[2];\n                    console.log(questions);\n                }\n            });\n        }\n\n        function next2() {\n            if(vm.question1Response && vm.question1Response.length > 0) {\n                vm.showQuestion1 = !vm.showQuestion1;\n\n                var response = {\n                    response: vm.question1Response,\n                    questionid_fk: vm.question1.questionid,\n                    type: getCheckinType(),\n                    visitid_fk: getVisitId()\n                };\n\n                var postQuestionPromise = CheckInService.PostQuestion(response);\n                postQuestionPromise.then(function(res) {\n                    console.log(res);\n                    vm.showQuestion2 = !vm.showQuestion2;\n                    setVisitId(res && res.data ? res.data.visitid : 0);\n                });\n            }\n        }\n\n        function next3() {\n            if (vm.question2Response && !isNaN(vm.question2Response)) {\n                vm.showQuestion2 = !vm.showQuestion2;\n                var response = {\n                    response: vm.question2Response,\n                    questionid_fk: vm.question2.questionid,\n                    type: getCheckinType(),\n                    visitid_fk: getVisitId()\n                };\n\n                var postQuestionPromise = CheckInService.PostQuestion(response);\n                postQuestionPromise.then(function (data) {\n                    console.log(data);\n                    vm.showQuestion3 = !vm.showQuestion3;\n                }).catch(function(err) {\n\n                });\n            }\n        }\n\n        function next4() {\n            if (vm.question2Response && !isNaN(vm.question2Response)) {\n                vm.showQuestion3 = !vm.showQuestion3;\n                var response = {\n                    response: vm.question3Response,\n                    questionid_fk: vm.question3.questionid,\n                    type: getCheckinType(),\n                    visitid_fk: getVisitId()\n                };\n\n                var postQuestionPromise = CheckInService.PostQuestion(response);\n                postQuestionPromise.then(function (data) {\n                    console.log(data);\n                    vm.showQuestion4 = !vm.showQuestion4;\n                    vm.displayMessage = true;\n                    $timeout(function(){\n                        vm.displayMessage = false;\n                        vm.showQuestion1 = true;\n                        setDefault();\n                    },3000);\n\n                }).catch(function(err) {\n                    console.log(err);\n                });\n            }\n        }\n\n        function getCheckinType() {\n            return \"Kiosk\";\n        }\n\n        function getVisitId() {\n            return vm.VisitId;\n        }\n\n        function setVisitId(visitid) {\n            vm.VisitId = visitid;\n        }\n\n        function setDefault() {\n            vm.VisitId = 0;\n            vm.question1Response = \"\";\n            vm.question2Response = \"\";\n            vm.question3Response = \"\";\n            vm.question4Response = \"\";\n        }\n    }\n})();\n","/**\n * Created by Frankfernandez on 1/31/17.\n */\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .factory('CheckInService', CheckInService);\n\n    CheckInService.$inject = ['HttpRequestService', 'AuthenticationSettings'];\n\n    function CheckInService(HttpRequestService, AuthenticationSettings) {\n        return {\n            GetQuestions: getQuestions,\n            PostQuestion: postQuestion\n        };\n\n        function getQuestions() {\n            return HttpRequestService.Go({\n                method: 'GET',\n                url: AuthenticationSettings.ResourcesAPI + \"api/checkin/getQuestions\"\n            });\n        }\n\n        function postQuestion(response) {\n            console.log(response);\n            return HttpRequestService.Go({\n                method: 'POST',\n                url: AuthenticationSettings.ResourcesAPI + \"api/checkin/postQuestion\",\n                data: response\n            });\n        }\n    }\n})();\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('RootController', RootController);\r\n\r\n    RootController.$inject = [];\r\n\r\n    function RootController() { }\r\n})();\r\n","/**\n * Created by RobertoRolon on 2/5/17. Report Controller...\n */\n\n(function() {\n\n    angular\n        .module('app')\n        .controller('ReportController', ReportController);\n\n    ReportController.$inject = ['ReportService'];\n\n    function ReportController(ReportService) {\n        var vm = this;\n\n        vm.SubmitFilterForm = SubmitFilterForm;\n\n        function SubmitFilterForm() {\n            if(vm.FilterForm.$invalid) return;\n\n            var startTime = moment(vm.FilterObject.startTime);\n            var hour = startTime.get('hour');\n            var minute = startTime.get('minute');\n\n            var startDate = moment(vm.FilterObject.startDate);\n            startDate.set('hour', hour);\n            startDate.set('minute', minute);\n\n            var startDateTime = startDate.format(\"YYYY-MM-DD H:mm\");\n            var endTime = startDate.format(\"YYYY-MM-DD\");\n\n            fetchMe(startDateTime, endTime);\n\n        }\n\n        function setInitialObjects() {\n            //set filter inputs here\n            vm.FilterObject = {startDate: null, startTime: null};\n\n            vm.Total = {Count: 0, Users:[]};\n            vm.Pool = {Count: 0, Users: [], Percent: 0};\n            vm.Gym = {Count: 0, Users: [], Percent: 0};\n            vm.GymPool = {Count: 0, Percent: 0};\n        }\n\n        function setDatePickerAndTime() {\n            vm.FilterObject.startDate = moment().format(\"MM/DD/YYYY\");\n            var startTime = moment();\n            startTime.set('hour', 6);\n            startTime.set('minute', 0);\n            vm.FilterObject.startTime = startTime;\n        }\n\n        function getInitialTimes() {\n            var startDate = moment().set('hour', 6).set('minute', 0);\n\n            return [startDate.format(\"YYYY-MM-DD H:mm\"), startDate.format(\"YYYY-MM-DD\")];\n        }\n\n        function fetchFacilityUsage(object, callback) {\n            ReportService.getFacilityUsage(object).then(function(data) {\n                callback(null,data);\n            }).catch(function(err) {\n                callback(err);\n            });\n        }\n\n        function fetchMe(startDateTime, endDate) {\n            var timeZoneOffset = moment().format(\"Z\");\n\n            var totalUsage =  ReportService.getFacilityUsage({startDateTime: startDateTime, endDate: endDate, setEven: 1, setEven2 : 0, response: \"\", questionid_fk:1, timeZoneOffset : timeZoneOffset});\n            var poolUsage =   ReportService.getFacilityUsage({startDateTime: startDateTime, endDate: endDate, setEven: 0, setEven2: 0,  response: \"Pool\", questionid_fk:3, timeZoneOffset : timeZoneOffset});\n            var gymUsage =   ReportService.getFacilityUsage({startDateTime: startDateTime, endDate: endDate, setEven: 0, setEven2: 0, response: \"Gym\", questionid_fk:3, timeZoneOffset : timeZoneOffset});\n            var users =   ReportService.getFacilityUsage({startDateTime: startDateTime, endDate: endDate, setEven: 1, setEven2: 1, response: \"\", questionid_fk:0, timeZoneOffset : timeZoneOffset});\n\n            ReportService.r([totalUsage, poolUsage, gymUsage, users], function(err, res){\n                if(err) {\n\n                }else {\n                    vm.Total.Count = res[0].data.rows.length;\n                    vm.Total.Users = res[0].data.rows;\n\n                    vm.Pool.Count = res[1].data.rows.length;\n                    vm.Pool.Users = res[1].data.rows;\n                    var percent = (vm.Pool.Count / vm.Total.Count) * 100;\n                    vm.Pool.Percent = Math.round(percent * 10) / 10;\n\n                    vm.Gym.Count = res[2].data.rows.length;\n                    vm.Gym.Users = res[2].data.rows;\n                    var percent2 = (vm.Gym.Count / vm.Total.Count) * 100;\n                    vm.Gym.Percent = Math.round(percent2 * 10) / 10;\n\n                    vm.GymPool.Count = vm.Pool.Count + vm.Gym.Count;\n                    var percent3 = (vm.GymPool.Count / vm.Total.Count) * 100;\n                    vm.GymPool.Percent = Math.round(percent3 * 10) / 10;\n\n                    vm.Total.Users = ReportService.parseUsers(res[3].data.rows);\n                }\n            });\n        }\n\n\n        function activate() {\n            setInitialObjects();\n            setDatePickerAndTime();\n\n            var start = getInitialTimes();\n            //fetchMe(\"2017-01-30 23:07\", \"2017-01-30\");\n            fetchMe(start[0], start[1]);\n        }\n\n\n        activate();\n    }\n\n})();","/**\n * Created by RobertoRolon on 2/5/17.\n */\n\n(function() {\n\n    angular\n        .module('app')\n        .factory('ReportService', ['HttpRequestService', 'AuthenticationSettings', '$q', ReportService]);\n\n    function ReportService(HttpRequestService, AuthenticationSettings, $q) {\n        return {\n            getFacilityUsage : getFacilityUsage,\n            r : resolvePromises,\n            parseUsers : parseUsers\n        };\n\n        function getFacilityUsage(object) {\n            return HttpRequestService.Go({\n                method: 'POST',\n                url: AuthenticationSettings.ResourcesAPI + \"api/checkin/getFacilityUsage\",\n                data: object\n            });\n        }\n\n        function parseUsers(users) {\n            var object = {};\n\n            for(var i in users) {\n                var key = users[i].visitid_fk;\n                if(object[key]) {\n                    object[key].push(users[i]);\n                }else {\n                    object[key] = [users[i]];\n                }\n            }\n\n            var array = [];\n\n            for(var j in object) {\n                var visit = object[j];\n                var displayObject = {name: visit[0] ? visit[0].response : \"N/A\", houseNumber: visit[1] ? visit[1].response : \"N/A\", facility: visit[2] ? visit[2].response : \"N/A\"};\n\n                if(visit[0])\n                    displayObject.createdonlocaltime = moment.parseZone(visit[0].createdonlocaltime).format(\"h:mm a\");\n\n                array.push(displayObject);\n            }\n            console.log(array);\n            return array;\n        }\n\n        function resolvePromises(promises, callback) {\n            $q.all(promises).then(function(res) {\n                if(res) {\n                    callback(null, res);\n                }else {\n                    callback({errorMessage : \"No data!\"});\n                }\n            }).catch(function(err) {\n                callback(err);\n            });\n        }\n\n    }\n\n})();"]}